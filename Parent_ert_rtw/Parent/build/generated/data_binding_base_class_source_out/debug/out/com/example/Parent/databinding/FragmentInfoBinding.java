// Generated by view binder compiler. Do not edit!
package com.example.Parent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Parent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView InfoTabDevice;

  @NonNull
  public final TextView InfoTabDeviceData;

  @NonNull
  public final TextView InfoTabModel;

  @NonNull
  public final TextView InfoTabModelData;

  @NonNull
  public final TextView InfoTabNetwork;

  @NonNull
  public final TextView InfoTabNetworkData;

  private FragmentInfoBinding(@NonNull FrameLayout rootView, @NonNull TextView InfoTabDevice,
      @NonNull TextView InfoTabDeviceData, @NonNull TextView InfoTabModel,
      @NonNull TextView InfoTabModelData, @NonNull TextView InfoTabNetwork,
      @NonNull TextView InfoTabNetworkData) {
    this.rootView = rootView;
    this.InfoTabDevice = InfoTabDevice;
    this.InfoTabDeviceData = InfoTabDeviceData;
    this.InfoTabModel = InfoTabModel;
    this.InfoTabModelData = InfoTabModelData;
    this.InfoTabNetwork = InfoTabNetwork;
    this.InfoTabNetworkData = InfoTabNetworkData;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.InfoTab_Device;
      TextView InfoTabDevice = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabDevice == null) {
        break missingId;
      }

      id = R.id.InfoTab_Device_Data;
      TextView InfoTabDeviceData = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabDeviceData == null) {
        break missingId;
      }

      id = R.id.InfoTab_Model;
      TextView InfoTabModel = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabModel == null) {
        break missingId;
      }

      id = R.id.InfoTab_Model_Data;
      TextView InfoTabModelData = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabModelData == null) {
        break missingId;
      }

      id = R.id.InfoTab_Network;
      TextView InfoTabNetwork = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabNetwork == null) {
        break missingId;
      }

      id = R.id.InfoTab_Network_Data;
      TextView InfoTabNetworkData = ViewBindings.findChildViewById(rootView, id);
      if (InfoTabNetworkData == null) {
        break missingId;
      }

      return new FragmentInfoBinding((FrameLayout) rootView, InfoTabDevice, InfoTabDeviceData,
          InfoTabModel, InfoTabModelData, InfoTabNetwork, InfoTabNetworkData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
